{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/utils/tooltip.class.js","webpack:///./node_modules/bootstrap-vue/es/directives/popover/popover.js","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?fd28","webpack:///src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?d718","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./node_modules/bootstrap-vue/es/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/es/utils/popover.class.js","webpack:///./node_modules/bootstrap-vue/es/utils/bv-event.class.js"],"names":["exports","__esModule","default","_popper","_interopRequireDefault","__webpack_require__","_bvEvent","_noop","_array","_dom","_inspect","obj","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","NAME","CLASS_PREFIX","BS_CLASS_PREFIX_REGEX","RegExp","concat","TRANSITION_DURATION","MODAL_CLOSE_EVENT","MODAL_SELECTOR","DROPDOWN_CLASS","DROPDOWN_OPEN_SELECTOR","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","TOPLEFT","TOPRIGHT","RIGHTTOP","RIGHTBOTTOM","BOTTOMLEFT","BOTTOMRIGHT","LEFTTOP","LEFTBOTTOM","OffsetMap","HoverState","SHOW","OUT","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Defaults","animation","template","trigger","title","delay","html","placement","offset","arrowPadding","container","fallbackPlacement","callbacks","boundary","boundaryPadding","variant","customClass","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","EvtOpts","passive","capture","NEXTID","generateId","name","ToolTip","element","config","$parent","this","$isEnabled","$fadeTimeout","$hoverTimeout","$visibleInterval","$hoverState","$activeTrigger","$popper","$element","$tip","$id","constructor","$root","$routeWatcher","$forceHide","forceHide","bind","$doHide","doHide","$doShow","doShow","$doDisable","doDisable","$doEnable","doEnable","updateConfig","$once","destroy","updatedConfig","Default","isNumber","show","hide","toString","content","fixTitle","$config","unListen","listen","setWhileOpenListeners","clearTimeout","parentElement","removeChild","enabledEvt","cancelable","relatedTarget","emitEvent","disabledEvt","event","dropdownOpen","click","isWithActiveTrigger","enter","leave","hasClass","getTipElement","_this","document","body","contains","isVisible","tip","setContent","isWithContent","setAttr","addAriaDescribedby","addClass","removeClass","getPlacement","attachment","getAttachment","addAttachmentClass","showEvt","defaultPrevented","getContainer","appendChild","removePopper","getPopperConfig","complete","fixTransition","prevHoverState","shownEvt","transitionOnce","on","_this2","clearInterval","setInterval","setModalListener","setDropdownListener","visibleCheck","setOnTouchStartListener","test","eventOn","eventOff","callback","force","_this3","hideEvt","parentNode","removeAriaDescribedby","hiddenEvt","evt","evtName","type","$emit","isFunction","closest","select","desc","getAttr","split","join","trim","_this4","d","removeAttr","_this5","transEvents","getTransitionEndEvents","called","fnOnce","setTimeout","isUndefined","style","isNull","scheduleUpdate","Boolean","innerHTML","compileTemplate","tabIndex","String","isString","div","createElement","node","firstElementChild","setElementContent","getTitle","allowHtml","isObject","nodeType","innerText","_this6","el","triggers","setRootListener","_this7","events","e","isDisabled","toggle","modal","__vue__","method","id","disable","enable","_this8","documentElement","from","children","_this9","_this10","hover","_this11","modifiers","getOffset","flip","behavior","arrow","preventOverflow","padding","boundariesElement","onCreate","data","originalPlacement","handlePopperPlacementChange","onUpdate","arrowOffset","parseFloat","getCS","width","toUpperCase","call","tabClass","className","match","cls","cleanTipClass","initConfigAnimation","get","_default","VBPopover","_popover","_warn","_config","_env","_object","BV_POPOVER","validTriggers","focus","blur","htmlRE","noFadeRE","placementRE","boundaryRE","delayRE","offsetRE","variantRE","parseBindings","bindings","getComponentConfig","parseInt","arg","mod","slice","selectedTriggers","applyPopover","vnode","isBrowser","context","removePopover","inserted","update","oldValue","componentUpdated","unbind","render","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","left","attrs","size","top","bottom","right","expression","staticRenderFns","Tooltipsvue_type_script_lang_js_","BTooltip","tooltip_default","a","BPopover","popover_default","JavascriptComponents_Tooltipsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","VBTooltip","_tooltip","BV_TOOLTIP","applyTooltip","removeTooltip","_typeof","Symbol","iterator","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","TITLE","CONTENT","PopOver","_ToolTip","hasTitle","hasContent","getContent","BvEvent","eventInit","undefined","assign","readonlyDescriptor","nativeEvent","vueTarget","componentId","preventDefault"],"mappings":"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","file":"js/chunk-505680fb.32e1003a.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _bvEvent = _interopRequireDefault(require(\"./bv-event.class\"));\n\nvar _noop = _interopRequireDefault(require(\"./noop\"));\n\nvar _array = require(\"./array\");\n\nvar _dom = require(\"./dom\");\n\nvar _inspect = require(\"./inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NAME = 'tooltip';\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar TRANSITION_DURATION = 150; // Modal `$root` hidden event\n\nvar MODAL_CLOSE_EVENT = 'bv::modal::hidden'; // Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show';\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n};\nvar HoverState = {\n  SHOW: 'show',\n  OUT: 'out'\n};\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TOOLTIP: '.tooltip',\n  TOOLTIP_INNER: '.tooltip-inner',\n  ARROW: '.arrow' // Defaults\n\n};\nvar Defaults = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  placement: 'top',\n  offset: 0,\n  arrowPadding: 6,\n  container: false,\n  fallbackPlacement: 'flip',\n  callbacks: {},\n  boundary: 'scrollParent',\n  boundaryPadding: 5,\n  variant: null,\n  customClass: null // Transition event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: ['webkitTransitionEnd'],\n  MozTransition: ['transitionend'],\n  OTransition: ['otransitionend', 'oTransitionEnd'],\n  transition: ['transitionend'] // Options for Native Event Listeners (since we never call preventDefault)\n\n};\nvar EvtOpts = {\n  passive: true,\n  capture: false // Client-side tip ID counter for aria-describedby attribute\n  // Each tooltip requires a unique client side ID\n\n};\nvar NEXTID = 1;\n/* istanbul ignore next */\n\nvar generateId = function generateId(name) {\n  return \"__BV_\".concat(name, \"_\").concat(NEXTID++, \"__\");\n};\n/*\n * ToolTip class definition\n */\n\n\nvar ToolTip =\n/*#__PURE__*/\nfunction () {\n  // Main constructor\n  function ToolTip(element, config, $parent) {\n    _classCallCheck(this, ToolTip);\n\n    // New tooltip object\n    this.$isEnabled = true;\n    this.$fadeTimeout = null;\n    this.$hoverTimeout = null;\n    this.$visibleInterval = null;\n    this.$hoverState = '';\n    this.$activeTrigger = {};\n    this.$popper = null;\n    this.$element = element;\n    this.$tip = null;\n    this.$id = generateId(this.constructor.NAME);\n    this.$parent = $parent || null;\n    this.$root = $parent && $parent.$root ? $parent.$root : null;\n    this.$routeWatcher = null; // We use a bound version of the following handlers for root/modal\n    // listeners to maintain the correct `this` context\n\n    this.$forceHide = this.forceHide.bind(this);\n    this.$doHide = this.doHide.bind(this);\n    this.$doShow = this.doShow.bind(this);\n    this.$doDisable = this.doDisable.bind(this);\n    this.$doEnable = this.doEnable.bind(this);\n    this._noop = _noop.default.bind(this); // Set the configuration\n\n    this.updateConfig(config); // Destroy ourselves if the parent is destroyed\n\n    if ($parent) {\n      $parent.$once('hook:beforeDestroy', this.destroy.bind(this));\n    }\n  } // NOTE: Overridden by PopOver class\n\n\n  _createClass(ToolTip, [{\n    key: \"updateConfig\",\n    // Update config\n    value: function updateConfig(config) {\n      // Merge config into defaults. We use `this` here because PopOver overrides Default\n      var updatedConfig = _objectSpread({}, this.constructor.Default, {}, config); // Sanitize delay\n\n\n      if (config.delay && (0, _inspect.isNumber)(config.delay)) {\n        /* istanbul ignore next */\n        updatedConfig.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      } // Title for tooltip and popover\n\n\n      if (config.title && (0, _inspect.isNumber)(config.title)) {\n        /* istanbul ignore next */\n        updatedConfig.title = config.title.toString();\n      } // Content only for popover\n\n\n      if (config.content && (0, _inspect.isNumber)(config.content)) {\n        /* istanbul ignore next */\n        updatedConfig.content = config.content.toString();\n      } // Hide element original title if needed\n\n\n      this.fixTitle(); // Update the config\n\n      this.$config = updatedConfig; // Stop/Restart listening\n\n      this.unListen();\n      this.listen();\n    } // Destroy this instance\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Stop listening to trigger events\n      this.unListen(); // Disable while open listeners/watchers\n\n      this.setWhileOpenListeners(false); // Clear any timeouts\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null; // Remove popper\n\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null; // Remove tip from document\n\n      if (this.$tip && this.$tip.parentElement) {\n        this.$tip.parentElement.removeChild(this.$tip);\n      }\n\n      this.$tip = null; // Null out other properties\n\n      this.$id = null;\n      this.$isEnabled = null;\n      this.$parent = null;\n      this.$root = null;\n      this.$element = null;\n      this.$config = null;\n      this.$hoverState = null;\n      this.$activeTrigger = null;\n      this.$forceHide = null;\n      this.$doHide = null;\n      this.$doShow = null;\n      this.$doDisable = null;\n      this.$doEnable = null;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // Create a non-cancelable BvEvent\n      var enabledEvt = new _bvEvent.default('enabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = true;\n      this.emitEvent(enabledEvt);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      // Create a non-cancelable BvEvent\n      var disabledEvt = new _bvEvent.default('disabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = false;\n      this.emitEvent(disabledEvt);\n    } // Click toggler\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (!this.$isEnabled) {\n        /* istanbul ignore next */\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n      /* istanbul ignore else */\n\n\n      if (event) {\n        this.$activeTrigger.click = !this.$activeTrigger.click;\n\n        if (this.isWithActiveTrigger()) {\n          this.enter(null);\n        } else {\n          this.leave(null);\n        }\n      } else {\n        if ((0, _dom.hasClass)(this.getTipElement(), ClassName.SHOW)) {\n          this.leave(null);\n        } else {\n          this.enter(null);\n        }\n      }\n    } // Show tooltip\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (!document.body.contains(this.$element) || !(0, _dom.isVisible)(this.$element)) {\n        // If trigger element isn't in the DOM or is not visible\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Build tooltip element (also sets this.$tip)\n\n\n      var tip = this.getTipElement();\n      this.fixTitle();\n      this.setContent(tip);\n\n      if (!this.isWithContent(tip)) {\n        // If no content, don't bother showing\n\n        /* istanbul ignore next */\n        this.$tip = null;\n        /* istanbul ignore next */\n\n        return;\n      } // Set ID on tip and aria-describedby on element\n\n\n      (0, _dom.setAttr)(tip, 'id', this.$id);\n      this.addAriaDescribedby(); // Set animation on or off\n\n      if (this.$config.animation) {\n        (0, _dom.addClass)(tip, ClassName.FADE);\n      } else {\n        (0, _dom.removeClass)(tip, ClassName.FADE);\n      }\n\n      var placement = this.getPlacement();\n      var attachment = this.constructor.getAttachment(placement);\n      this.addAttachmentClass(attachment); // Create a cancelable BvEvent\n\n      var showEvt = new _bvEvent.default('show', {\n        cancelable: true,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(showEvt);\n\n      if (showEvt.defaultPrevented) {\n        // Don't show if event cancelled\n        this.$tip = null;\n        return;\n      } // Insert tooltip if needed\n\n\n      var container = this.getContainer();\n\n      if (!document.body.contains(tip)) {\n        container.appendChild(tip);\n      } // Refresh popper\n\n\n      this.removePopper();\n      this.$popper = new _popper.default(this.$element, tip, this.getPopperConfig(placement, tip)); // Transitionend callback\n\n      var complete = function complete() {\n        if (_this.$config.animation) {\n          _this.fixTransition(tip);\n        }\n\n        var prevHoverState = _this.$hoverState;\n        _this.$hoverState = null;\n\n        if (prevHoverState === HoverState.OUT) {\n          _this.leave(null);\n        } // Create a non-cancelable BvEvent\n\n\n        var shownEvt = new _bvEvent.default('shown', {\n          cancelable: false,\n          target: _this.$element,\n          relatedTarget: tip\n        });\n\n        _this.emitEvent(shownEvt);\n      }; // Enable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(true); // Show tip\n\n      (0, _dom.addClass)(tip, ClassName.SHOW); // Start the transition/animation\n\n      this.transitionOnce(tip, complete);\n    } // Handler for periodic visibility check\n\n  }, {\n    key: \"visibleCheck\",\n    value: function visibleCheck(on) {\n      var _this2 = this;\n\n      clearInterval(this.$visibleInterval);\n      this.$visibleInterval = null;\n\n      if (on) {\n        this.$visibleInterval = setInterval(function () {\n          var tip = _this2.$tip;\n\n          if (tip && !(0, _dom.isVisible)(_this2.$element) && (0, _dom.hasClass)(tip, ClassName.SHOW)) {\n            // Element is no longer visible, so force-hide the tooltip\n            _this2.forceHide();\n          }\n        }, 100);\n      }\n    }\n  }, {\n    key: \"setWhileOpenListeners\",\n    value: function setWhileOpenListeners(on) {\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n\n      if (on && /(focus|blur)/.test(this.$config.trigger)) {\n        // If focus moves between trigger element and tip container, don't close\n        (0, _dom.eventOn)(this.$tip, 'focusout', this, EvtOpts);\n      } else {\n        (0, _dom.eventOff)(this.$tip, 'focusout', this, EvtOpts);\n      }\n    } // Force hide of tip (internal method)\n\n  }, {\n    key: \"forceHide\",\n    value: function forceHide() {\n      if (!this.$tip || !(0, _dom.hasClass)(this.$tip, ClassName.SHOW)) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      this.$hoverState = '';\n      this.$activeTrigger = {}; // Hide the tip\n\n      this.hide(null, true);\n    } // Hide tooltip\n\n  }, {\n    key: \"hide\",\n    value: function hide(callback, force) {\n      var _this3 = this;\n\n      var tip = this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return;\n      } // Create a cancelable BvEvent\n\n\n      var hideEvt = new _bvEvent.default('hide', {\n        // We disable cancelling if force is true\n        cancelable: !force,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(hideEvt);\n\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Transitionend callback\n\n\n      var complete = function complete() {\n        if (_this3.$hoverState !== HoverState.SHOW && tip.parentNode) {\n          // Remove tip from DOM, and force recompile on next show\n          tip.parentNode.removeChild(tip);\n\n          _this3.removeAriaDescribedby();\n\n          _this3.removePopper();\n\n          _this3.$tip = null;\n        }\n\n        if (callback) {\n          /* istanbul ignore next */\n          callback();\n        } // Create a non-cancelable BvEvent\n\n\n        var hiddenEvt = new _bvEvent.default('hidden', {\n          cancelable: false,\n          target: _this3.$element,\n          relatedTarget: null\n        });\n\n        _this3.emitEvent(hiddenEvt);\n      }; // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // If forced close, disable animation\n\n      if (force) {\n        (0, _dom.removeClass)(tip, ClassName.FADE);\n      } // Hide tip\n\n\n      (0, _dom.removeClass)(tip, ClassName.SHOW); // Clear any active triggers\n\n      this.$activeTrigger = {}; // Start the hide transition\n\n      this.transitionOnce(tip, complete);\n      this.$hoverState = '';\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(evt) {\n      var evtName = evt.type;\n      var $root = this.$root;\n\n      if ($root && $root.$emit) {\n        // Emit an event on $root\n        $root.$emit(\"bv::\".concat(this.constructor.NAME, \"::\").concat(evtName), evt);\n      }\n\n      var callbacks = this.$config.callbacks || {};\n\n      if ((0, _inspect.isFunction)(callbacks[evtName])) {\n        callbacks[evtName](evt);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      var container = this.$config.container;\n      var body = document.body; // If we are in a modal, we append to the modal instead of body,\n      // unless a container is specified\n\n      return container === false ? (0, _dom.closest)(MODAL_SELECTOR, this.$element) || body : (0, _dom.select)(container, body) || body;\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"addAriaDescribedby\",\n    value: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var desc = (0, _dom.getAttr)(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.$id).join(' ').trim();\n      (0, _dom.setAttr)(this.$element, 'aria-describedby', desc);\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"removeAriaDescribedby\",\n    value: function removeAriaDescribedby() {\n      var _this4 = this;\n\n      var desc = (0, _dom.getAttr)(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this4.$id;\n      }).join(' ').trim();\n\n      if (desc) {\n        /* istanbul ignore next */\n        (0, _dom.setAttr)(this.$element, 'aria-describedby', desc);\n      } else {\n        (0, _dom.removeAttr)(this.$element, 'aria-describedby');\n      }\n    }\n  }, {\n    key: \"removePopper\",\n    value: function removePopper() {\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null;\n    }\n  }, {\n    key: \"transitionOnce\",\n    value: function transitionOnce(tip, complete) {\n      var _this5 = this;\n\n      var transEvents = this.getTransitionEndEvents();\n      var called = false;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n\n      var fnOnce = function fnOnce() {\n        if (called) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        called = true;\n        clearTimeout(_this5.$fadeTimeout);\n        _this5.$fadeTimeout = null;\n        transEvents.forEach(function (evtName) {\n          (0, _dom.eventOff)(tip, evtName, fnOnce, EvtOpts);\n        }); // Call complete callback\n\n        complete();\n      };\n\n      if ((0, _dom.hasClass)(tip, ClassName.FADE)) {\n        transEvents.forEach(function (evtName) {\n          (0, _dom.eventOn)(tip, evtName, fnOnce, EvtOpts);\n        }); // Fallback to setTimeout()\n\n        this.$fadeTimeout = setTimeout(fnOnce, TRANSITION_DURATION);\n      } else {\n        fnOnce();\n      }\n    } // What transitionend event(s) to use? (returns array of event names)\n\n  }, {\n    key: \"getTransitionEndEvents\",\n    value: function getTransitionEndEvents() {\n      for (var name in TransitionEndEvents) {\n        if (!(0, _inspect.isUndefined)(this.$element.style[name])) {\n          return TransitionEndEvents[name];\n        }\n      } // Fallback\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!(0, _inspect.isNull)(this.$popper)) {\n        this.$popper.scheduleUpdate();\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"isWithContent\",\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      return Boolean(((0, _dom.select)(Selector.TOOLTIP_INNER, tip) || {}).innerHTML);\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      (0, _dom.addClass)(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      if (!this.$tip) {\n        // Try and compile user supplied template, or fallback to default template\n        this.$tip = this.compileTemplate(this.$config.template) || this.compileTemplate(this.constructor.Default.template);\n      } // Add tab index so tip can be focused, and to allow it to be\n      // set as relatedTarget in focusin/out events\n\n\n      this.$tip.tabIndex = -1; // Add variant if specified\n\n      if (this.$config.variant) {\n        (0, _dom.addClass)(this.$tip, \"b-\".concat(this.constructor.NAME, \"-\").concat(this.$config.variant));\n      }\n\n      if (this.$config.customClass) {\n        (0, _dom.addClass)(this.$tip, String(this.$config.customClass));\n      }\n\n      return this.$tip;\n    }\n  }, {\n    key: \"compileTemplate\",\n    value: function compileTemplate(html) {\n      if (!html || !(0, _inspect.isString)(html)) {\n        /* istanbul ignore next */\n        return null;\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = html.trim();\n      var node = div.firstElementChild ? div.removeChild(div.firstElementChild) : null;\n      div = null;\n      return node;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      this.setElementContent((0, _dom.select)(Selector.TOOLTIP_INNER, tip), this.getTitle());\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      (0, _dom.removeClass)(tip, ClassName.SHOW);\n    }\n  }, {\n    key: \"setElementContent\",\n    value: function setElementContent(container, content) {\n      if (!container) {\n        // If container element doesn't exist, just return\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var allowHtml = this.$config.html;\n\n      if ((0, _inspect.isObject)(content) && content.nodeType) {\n        // Content is a DOM node\n        if (allowHtml) {\n          if (content.parentElement !== container) {\n            container.innerHTML = '';\n            container.appendChild(content);\n          }\n        } else {\n          /* istanbul ignore next */\n          container.innerText = content.innerText;\n        }\n      } else {\n        // We have a plain HTML string or Text\n        container[allowHtml ? 'innerHTML' : 'innerText'] = content;\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n\n      if ((0, _inspect.isFunction)(title)) {\n        // Call the function to get the title value\n\n        /* istanbul ignore next */\n        title = title(this.$element);\n      }\n\n      if ((0, _inspect.isObject)(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a DOM node, but without inner content,\n        // so just return empty string\n\n        /* istanbul ignore next */\n        title = '';\n      }\n\n      if ((0, _inspect.isString)(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // If an explicit title is not given, try element's title attributes\n        title = (0, _dom.getAttr)(this.$element, 'title') || (0, _dom.getAttr)(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this6 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var triggers = this.$config.trigger.trim().split(/\\s+/); // Listen for global show/hide events\n\n      this.setRootListener(true); // Using `this` as the handler will get automatically directed to\n      // this.handleEvent and maintain our binding to `this`\n\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          (0, _dom.eventOn)(el, 'click', _this6, EvtOpts);\n        } else if (trigger === 'focus') {\n          (0, _dom.eventOn)(el, 'focusin', _this6, EvtOpts);\n          (0, _dom.eventOn)(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n          (0, _dom.eventOn)(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'hover') {\n          (0, _dom.eventOn)(el, 'mouseenter', _this6, EvtOpts);\n          (0, _dom.eventOn)(el, 'mouseleave', _this6, EvtOpts);\n        }\n      }, this);\n    }\n  }, {\n    key: \"unListen\",\n    value: function unListen() {\n      var _this7 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave']; // Using `this` as the handler will get automatically directed to this.handleEvent\n\n      events.forEach(function (evt) {\n        (0, _dom.eventOff)(el, evt, _this7, EvtOpts);\n      }, this); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false);\n    } // This special method allows us to use `this` as the event handlers\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      // If disabled, don't do anything\n      // If tip is shown before element gets disabled, then tip will not\n      // close until no longer disabled or forcefully closed\n      if ((0, _dom.isDisabled)(this.$element)) {\n        /* istanbul ignore next */\n        return;\n      } // Exit if not enabled\n\n\n      if (!this.$isEnabled) {\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      var type = e.type;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var $element = this.$element;\n      var $tip = this.$tip;\n\n      if (type === 'click') {\n        this.toggle(e);\n      } else if (type === 'focusin' || type === 'mouseenter') {\n        this.enter(e);\n      } else if (type === 'focusout') {\n        // `target` is the element which is loosing focus and\n        // `relatedTarget` is the element gaining focus\n        // If focus moves from `$element` to `$tip`, don't trigger a leave\n        if ($tip && $element && $element.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves from `$tip` to `$element`, don't trigger a leave\n\n\n        if ($tip && $element && $tip.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$tip`, don't trigger a leave\n\n\n        if ($tip && $tip.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$element`, don't trigger a leave\n\n\n        if ($element && $element.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(e);\n      } else if (type === 'mouseleave') {\n        this.leave(e);\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setModalListener\",\n    value: function setModalListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      }\n\n      var modal = (0, _dom.closest)(MODAL_SELECTOR, el); // If we are not in a modal, don't worry\n\n      if (!modal) {\n        return;\n      } // We can listen for modal hidden events on `$root`\n\n\n      this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.$forceHide);\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setDropdownListener\",\n    value: function setDropdownListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      } // If we are not on a dropdown menu, don't worry\n\n\n      if (!(0, _dom.hasClass)(el, DROPDOWN_CLASS)) {\n        return;\n      } // We can listen for dropdown shown events on it's instance\n\n\n      if (el && el.__vue__) {\n        el.__vue__[on ? '$on' : '$off']('shown', this.$forceHide);\n      }\n    }\n  }, {\n    key: \"setRootListener\",\n    value: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var $root = this.$root;\n\n      if ($root) {\n        var method = on ? '$on' : '$off';\n        $root[method](\"bv::hide::\".concat(this.constructor.NAME), this.$doHide);\n        $root[method](\"bv::show::\".concat(this.constructor.NAME), this.$doShow);\n        $root[method](\"bv::disable::\".concat(this.constructor.NAME), this.$doDisable);\n        $root[method](\"bv::enable::\".concat(this.constructor.NAME), this.$doEnable);\n      }\n    }\n  }, {\n    key: \"dropdownOpen\",\n    value: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      return (0, _dom.hasClass)(this.$element, DROPDOWN_CLASS) && (0, _dom.select)(DROPDOWN_OPEN_SELECTOR, this.$element);\n    } // Programmatically hide tooltip or popover\n\n  }, {\n    key: \"doHide\",\n    value: function doHide(id) {\n      if (!id) {\n        // Close all tooltips or popovers\n        this.forceHide();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Close this specific tooltip or popover\n        this.hide();\n      }\n    } // Programmatically show tooltip or popover\n\n  }, {\n    key: \"doShow\",\n    value: function doShow(id) {\n      if (!id) {\n        // Open all tooltips or popovers\n        this.show();\n      } else if (id && this.$element && this.$element.id && this.$element.id === id) {\n        // Show this specific tooltip or popover\n        this.show();\n      }\n    } // Programmatically disable tooltip or popover\n\n  }, {\n    key: \"doDisable\",\n    value: function doDisable(id) {\n      if (!id) {\n        // Disable all tooltips or popovers\n        this.disable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Disable this specific tooltip or popover\n        this.disable();\n      }\n    } // Programmatically enable tooltip or popover\n\n  }, {\n    key: \"doEnable\",\n    value: function doEnable(id) {\n      if (!id) {\n        // Enable all tooltips or popovers\n        this.enable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Enable this specific tooltip or popover\n        this.enable();\n      }\n    }\n  }, {\n    key: \"setOnTouchStartListener\",\n    value: function setOnTouchStartListener(on) {\n      var _this8 = this;\n\n      // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        /* istanbul ignore next: JSDOM does not support `ontouchstart` event */\n        (0, _array.from)(document.body.children).forEach(function (el) {\n          if (on) {\n            (0, _dom.eventOn)(el, 'mouseover', _this8._noop);\n          } else {\n            (0, _dom.eventOff)(el, 'mouseover', _this8._noop);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fixTitle\",\n    value: function fixTitle() {\n      var el = this.$element;\n\n      if ((0, _dom.getAttr)(el, 'title') || !(0, _inspect.isString)((0, _dom.getAttr)(el, 'data-original-title'))) {\n        (0, _dom.setAttr)(el, 'data-original-title', (0, _dom.getAttr)(el, 'title') || '');\n        (0, _dom.setAttr)(el, 'title', '');\n      }\n    } // Enter handler\n\n  }, {\n    key: \"enter\",\n    value: function enter(e) {\n      var _this9 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n\n      if ((0, _dom.hasClass)(this.getTipElement(), ClassName.SHOW) || this.$hoverState === HoverState.SHOW) {\n        this.$hoverState = HoverState.SHOW;\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.SHOW;\n\n      if (!this.$config.delay || !this.$config.delay.show) {\n        this.show();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this9.$hoverState === HoverState.SHOW) {\n          _this9.show();\n        }\n      }, this.$config.delay.show);\n    } // Leave handler\n\n  }, {\n    key: \"leave\",\n    value: function leave(e) {\n      var _this10 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusout' ? 'focus' : 'hover'] = false;\n\n        if (e.type === 'focusout' && /blur/.test(this.$config.trigger)) {\n          // Special case for `blur`: we clear out the other triggers\n          this.$activeTrigger.click = false;\n          this.$activeTrigger.hover = false;\n        }\n      }\n\n      if (this.isWithActiveTrigger()) {\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.OUT;\n\n      if (!this.$config.delay || !this.$config.delay.hide) {\n        this.hide();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this10.$hoverState === HoverState.OUT) {\n          _this10.hide();\n        }\n      }, this.$config.delay.hide);\n    }\n  }, {\n    key: \"getPopperConfig\",\n    value: function getPopperConfig(placement, tip) {\n      var _this11 = this;\n\n      return {\n        placement: this.constructor.getAttachment(placement),\n        modifiers: {\n          offset: {\n            offset: this.getOffset(placement, tip)\n          },\n          flip: {\n            behavior: this.$config.fallbackPlacement\n          },\n          arrow: {\n            element: '.arrow'\n          },\n          preventOverflow: {\n            padding: this.$config.boundaryPadding,\n            boundariesElement: this.$config.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          if (data.originalPlacement !== data.placement) {\n            _this11.handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          _this11.handlePopperPlacementChange(data);\n        }\n      };\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(placement, tip) {\n      if (!this.$config.offset) {\n        var arrow = (0, _dom.select)(Selector.ARROW, tip);\n        var arrowOffset = parseFloat((0, _dom.getCS)(arrow).width) + parseFloat(this.$config.arrowPadding);\n\n        switch (OffsetMap[placement.toUpperCase()]) {\n          case +1:\n            return \"+50%p - \".concat(arrowOffset, \"px\");\n\n          case -1:\n            return \"-50%p + \".concat(arrowOffset, \"px\");\n\n          default:\n            return 0;\n        }\n      }\n\n      return this.$config.offset;\n    }\n  }, {\n    key: \"getPlacement\",\n    value: function getPlacement() {\n      var placement = this.$config.placement;\n\n      if ((0, _inspect.isFunction)(placement)) {\n        /* istanbul ignore next */\n        return placement.call(this, this.$tip, this.$element);\n      }\n\n      return placement;\n    }\n  }, {\n    key: \"isWithActiveTrigger\",\n    value: function isWithActiveTrigger() {\n      for (var trigger in this.$activeTrigger) {\n        if (this.$activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    } // NOTE: Overridden by PopOver class\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!(0, _inspect.isNull)(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          (0, _dom.removeClass)(tip, cls);\n        });\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"handlePopperPlacementChange\",\n    value: function handlePopperPlacementChange(data) {\n      this.cleanTipClass();\n      this.addAttachmentClass(this.constructor.getAttachment(data.placement));\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"fixTransition\",\n    value: function fixTransition(tip) {\n      var initConfigAnimation = this.$config.animation || false;\n\n      if (!(0, _inspect.isNull)((0, _dom.getAttr)(tip, 'x-placement'))) {\n        return;\n      }\n\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      this.$config.animation = false;\n      this.hide();\n      this.show();\n      this.$config.animation = initConfigAnimation;\n    }\n  }], [{\n    key: \"getAttachment\",\n    value: function getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Defaults;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return ToolTip;\n}();\n\nvar _default = ToolTip;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.VBPopover = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _popover = _interopRequireDefault(require(\"../../utils/popover.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Key which we use to store tooltip object on element\nvar BV_POPOVER = '__BV_PopOver__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Directive modifier test regular expressions. Pre-compile for performance\n\n};\nvar htmlRE = /^html$/;\nvar noFadeRE = /^nofade$/i;\nvar placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/;\nvar boundaryRE = /^(window|viewport|scrollParent)$/;\nvar delayRE = /^d\\d+$/;\nvar offsetRE = /^o-?\\d+$/;\nvar variantRE = /^v-.+$/; // Build a PopOver config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BPopover';\n  var config = {\n    delay: (0, _config.getComponentConfig)(NAME, 'delay'),\n    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),\n    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0,\n    variant: (0, _config.getComponentConfig)(NAME, 'variant'),\n    customClass: (0, _config.getComponentConfig)(NAME, 'customClass') // Process bindings.value\n\n  };\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if ((0, _inspect.isFunction)(bindings.value)) {\n    // Content generator function\n    config.content = bindings.value;\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, {}, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (htmlRE.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (noFadeRE.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (placementRE.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (boundaryRE.test(mod)) {\n      // Boundary of popover\n      config.boundary = mod;\n    } else if (delayRE.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (offsetRE.test(mod)) {\n      // Offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    } else if (variantRE.test(mod)) {\n      // Variant\n      config.variant = mod.slice(2) || null;\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = (0, _inspect.isString)(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update PopOver on our element\n\n\nvar applyPopover = function applyPopover(el, bindings, vnode) {\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  } // Popper is required for PopOvers to work\n\n\n  if (!_popper.default) {\n    /* istanbul ignore next */\n    (0, _warn.default)('v-b-popover: Popper.js is required for PopOvers to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].updateConfig(config);\n  } else {\n    el[BV_POPOVER] = new _popover.default(el, config, vnode.context);\n  }\n}; // Remove PopOver on our element\n\n\nvar removePopover = function removePopover(el) {\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].destroy();\n    el[BV_POPOVER] = null;\n    delete el[BV_POPOVER];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar VBPopover = {\n  bind: function bind(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removePopover(el);\n  }\n};\nexports.VBPopover = VBPopover;\nvar _default = VBPopover;\nexports.default = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Tooltips\")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.left\",modifiers:{\"hover\":true,\"left\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.top\",modifiers:{\"hover\":true,\"top\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on bottom\"}},[_vm._v(\"On bottom\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.right\",modifiers:{\"hover\":true,\"right\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on right\"}},[_vm._v(\"On right\\n        \")])],1),_c('div',{staticClass:\"col-lg-6 mt-4 mt-lg-0\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Popovers\")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.top\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"top\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.right\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"right\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On right\"}},[_vm._v(\"On right\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"bottom\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On bottom\"}},[_vm._v(\"On bottom\\n        \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Tooltips</small>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.left title=\"Tooltip on left\">On left\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.top title=\"Tooltip on top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.bottom title=\"Tooltip on bottom\">On bottom\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.right title=\"Tooltip on right\">On right\n            </base-button>\n        </div>\n        <div class=\"col-lg-6 mt-4 mt-lg-0\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Popovers</small>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.top=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.right=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On right\">On right\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.bottom=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On bottom\">On bottom\n            </base-button>\n        </div>\n    </div>\n</template>\n<script>\nimport BTooltip from \"bootstrap-vue/es/directives/tooltip/tooltip\";\nimport BPopover from \"bootstrap-vue/es/directives/popover/popover\";\n\nexport default {\n  directives: {\n    BTooltip,\n    BPopover\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tooltips.vue?vue&type=template&id=bb3114be&\"\nimport script from \"./Tooltips.vue?vue&type=script&lang=js&\"\nexport * from \"./Tooltips.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.VBTooltip = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _tooltip = _interopRequireDefault(require(\"../../utils/tooltip.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Key which we use to store tooltip object on element\nvar BV_TOOLTIP = '__BV_ToolTip__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Directive modifier test regular expressions. Pre-compile for performance\n\n};\nvar htmlRE = /^html$/;\nvar noFadeRE = /^nofade$/i;\nvar placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/;\nvar boundaryRE = /^(window|viewport|scrollParent)$/;\nvar delayRE = /^d\\d+$/;\nvar offsetRE = /^o-?\\d+$/;\nvar variantRE = /^v-.+$/; // Build a ToolTip config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BTooltip';\n  var config = {\n    delay: (0, _config.getComponentConfig)(NAME, 'delay'),\n    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),\n    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0,\n    variant: (0, _config.getComponentConfig)(NAME, 'variant'),\n    customClass: (0, _config.getComponentConfig)(NAME, 'customClass') // Process bindings.value\n\n  };\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is tooltip content (html optionally supported)\n    config.title = bindings.value;\n  } else if ((0, _inspect.isFunction)(bindings.value)) {\n    // Title generator function\n    config.title = bindings.value;\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, {}, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (htmlRE.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (noFadeRE.test(mod)) {\n      // No animation\n      config.animation = false;\n    } else if (placementRE.test(mod)) {\n      // Placement of tooltip\n      config.placement = mod;\n    } else if (boundaryRE.test(mod)) {\n      // Boundary of tooltip\n      config.boundary = mod;\n    } else if (delayRE.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (offsetRE.test(mod)) {\n      // Offset value, negative allowed\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    } else if (variantRE.test(mod)) {\n      // Variant\n      config.variant = mod.slice(2) || null;\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = (0, _inspect.isString)(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update ToolTip on our element\n\n\nvar applyTooltip = function applyTooltip(el, bindings, vnode) {\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  if (!_popper.default) {\n    // Popper is required for ToolTips to work\n\n    /* istanbul ignore next */\n    (0, _warn.default)('v-b-tooltip: Popper.js is required for ToolTips to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].updateConfig(config);\n  } else {\n    el[BV_TOOLTIP] = new _tooltip.default(el, config, vnode.context);\n  }\n}; // Remove ToolTip on our element\n\n\nvar removeTooltip = function removeTooltip(el) {\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].destroy();\n    el[BV_TOOLTIP] = null;\n    delete el[BV_TOOLTIP];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar VBTooltip = {\n  bind: function bind(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeTooltip(el);\n  }\n};\nexports.VBTooltip = VBTooltip;\nvar _default = VBTooltip;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _tooltip = _interopRequireDefault(require(\"./tooltip.class\"));\n\nvar _dom = require(\"./dom\");\n\nvar _inspect = require(\"./inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NAME = 'popover';\nvar CLASS_PREFIX = 'bs-popover';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\n\nvar Defaults = _objectSpread({}, _tooltip.default.Default, {\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n});\n\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TITLE: '.popover-header',\n  CONTENT: '.popover-body'\n};\n\nvar PopOver =\n/*#__PURE__*/\nfunction (_ToolTip) {\n  _inherits(PopOver, _ToolTip);\n\n  function PopOver() {\n    _classCallCheck(this, PopOver);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PopOver).apply(this, arguments));\n  }\n\n  _createClass(PopOver, [{\n    key: \"isWithContent\",\n    // --- Method overrides ---\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      var hasTitle = Boolean(((0, _dom.select)(Selector.TITLE, tip) || {}).innerHTML);\n      var hasContent = Boolean(((0, _dom.select)(Selector.CONTENT, tip) || {}).innerHTML);\n      return hasTitle || hasContent;\n    }\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment)\n    /* istanbul ignore next */\n    {\n      (0, _dom.addClass)(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      // we use append for html objects to maintain js events/components\n      this.setElementContent((0, _dom.select)(Selector.TITLE, tip), this.getTitle());\n      this.setElementContent((0, _dom.select)(Selector.CONTENT, tip), this.getContent());\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      (0, _dom.removeClass)(tip, ClassName.SHOW);\n    } // This method may look identical to ToolTip version, but it uses a different RegEx defined above\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass()\n    /* istanbul ignore next */\n    {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!(0, _inspect.isNull)(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          (0, _dom.removeClass)(tip, cls);\n        });\n      }\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n      /* istanbul ignore next */\n\n      if ((0, _inspect.isFunction)(title)) {\n        title = title(this.$element);\n      }\n      /* istanbul ignore next */\n\n\n      if ((0, _inspect.isObject)(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        title = '';\n      }\n\n      if ((0, _inspect.isString)(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // Try and grab element's title attribute\n        title = (0, _dom.getAttr)(this.$element, 'title') || (0, _dom.getAttr)(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    } // New methods\n\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      var content = this.$config.content || '';\n      /* istanbul ignore next */\n\n      if ((0, _inspect.isFunction)(content)) {\n        content = content(this.$element);\n      }\n      /* istanbul ignore next */\n\n\n      if ((0, _inspect.isObject)(content) && content.nodeType && !content.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        content = '';\n      }\n\n      if ((0, _inspect.isString)(content)) {\n        content = content.trim();\n      }\n\n      return content;\n    }\n  }], [{\n    key: \"Default\",\n    // --- Getter overrides ---\n    get: function get() {\n      return Defaults;\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return PopOver;\n}(_tooltip.default);\n\nvar _default = PopOver;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.BvEvent = void 0;\n\nvar _object = require(\"./object\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar BvEvent =\n/*#__PURE__*/\nfunction () {\n  function BvEvent(type) {\n    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, BvEvent);\n\n    // Start by emulating native Event constructor\n    if (!type) {\n      /* istanbul ignore next */\n      throw new TypeError(\"Failed to construct '\".concat(this.constructor.name, \"'. 1 argument required, \").concat(arguments.length, \" given.\"));\n    } // Merge defaults first, the eventInit, and the type last\n    // so it can't be overwritten\n\n\n    (0, _object.assign)(this, BvEvent.Defaults, this.constructor.Defaults, eventInit, {\n      type: type\n    }); // Freeze some props as readonly, but leave them enumerable\n\n    (0, _object.defineProperties)(this, {\n      type: (0, _object.readonlyDescriptor)(),\n      cancelable: (0, _object.readonlyDescriptor)(),\n      nativeEvent: (0, _object.readonlyDescriptor)(),\n      target: (0, _object.readonlyDescriptor)(),\n      relatedTarget: (0, _object.readonlyDescriptor)(),\n      vueTarget: (0, _object.readonlyDescriptor)(),\n      componentId: (0, _object.readonlyDescriptor)()\n    }); // Create a private variable using closure scoping\n\n    var defaultPrevented = false; // Recreate preventDefault method. One way setter\n\n    this.preventDefault = function preventDefault() {\n      if (this.cancelable) {\n        defaultPrevented = true;\n      }\n    }; // Create `defaultPrevented` publicly accessible prop that\n    // can only be altered by the preventDefault method\n\n\n    (0, _object.defineProperty)(this, 'defaultPrevented', {\n      enumerable: true,\n      get: function get() {\n        return defaultPrevented;\n      }\n    });\n  }\n\n  _createClass(BvEvent, null, [{\n    key: \"Defaults\",\n    get: function get() {\n      return {\n        type: '',\n        cancelable: true,\n        nativeEvent: null,\n        target: null,\n        relatedTarget: null,\n        vueTarget: null,\n        componentId: null\n      };\n    }\n  }]);\n\n  return BvEvent;\n}(); // Named Exports\n\n\nexports.BvEvent = BvEvent;\n// Default Export\nvar _default = BvEvent;\nexports.default = _default;"],"sourceRoot":""}